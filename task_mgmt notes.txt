django task management project
phitron sdp, module 4, instriuctor: romjan ali


copy class codes
create venv myenv
myenv\Scripts\activate -------------
pip install django
code .
python manage.py runserver ---------
ctrl+c

http://127.0.0.1:8000/tasks/user-dashboard/
http://127.0.0.1:8000/tasks/manager-dashboard/
http://127.0.0.1:8000/tasks/test/

-------------
(tailwind v3 - installed in this project)
for tailwind output.css, while in venv from project root:
npm init -y (creates a package.json)
npm install -D tailwindcss  --(or npm install -D tailwindcss postcss autoprefixer)
npx tailwindcss init  --(create tailwind.config.js -- here edit content array -- removed in v4)
Set Up Input CSS File (tailwind-input.css - keep in static folder) with:
@tailwind base;
@tailwind components;
@tailwind utilities;
Build the Output CSS File : npx tailwindcss build -i static/css/tailwind-input.css -o static/css/output.css -----
(output created - run this eachtime after tailwind class add/edit)
----------------------
(for v4)
npm init -y
npm install -D tailwindcss@^4.1
static/css/tailwind-input.css: @import "tailwindcss";
in project root tailwind.config.js:
export default {
  content: [
    './templates/**/*.html',
    './*/templates/**/*.html',  // For apps with their own templates
    './static/js/**/*.js',      // If you have JS files
  ],
}
npx tailwindcss -i static/css/tailwind-input.css -o static/css/output.css --watch
in base.html head: <link href="{% static 'css/output.css' %}" rel="stylesheet">
Add npm scripts to package.json: (if dont add then run latter commands like v3 above)
{
  "scripts": {
    "build-css": "tailwindcss -i static/css/tailwind-input.css -o static/css/output.css",
    "watch-css": "tailwindcss -i static/css/tailwind-input.css -o static/css/output.css --watch",
    "build-css-prod": "tailwindcss -i static/css/tailwind-input.css -o static/css/output.css --minify"
  }
}

run npm run watch-css to automatically rebuild css for add/edit
for production: run npm run build-css-prod to create minified css
check version installed: npm list tailwindcss
------------------------------------


module 5:
connect postgresql to django:
install postgresql in pc.
modify DATABASES tuple in settings.py
pip install "psycopg[binary]"  --(xx pip install psycopg-binary)
python -c "import psycopg; print(psycopg.__version__)"
pip list

python manage.py runserver   --(ok)
ctrl+c

python manage.py makemigrations
python manage.py migrate

tables are created in pgAdmin: task_management > Schmas > tables.

python manage.py createsuperuser
admin-admin@example.com-1234
shows in pgAdmin


django shell ----
python manage.py shell
>>> from django.contrib.auth import get_user_model
>>> User = get_user_model()
>>> users = User.objects.all()
>>> for user in users:
    print(user.username)
- prints data
>>> user = User.objects.create_user(username="anup", email="anup@example.com", password="1234")
>>> print(user)
- created in database

created tasks and users models(with CustomUser) - reset previous data.
python manage.py makemigrations
python manage.py migrate

python manage.py createsuperuser
admin-admin@example.com-1234
shows in pgAdmin: in users_customuser table.

created user: anup-anup@example.com-postgres1


http://127.0.0.1:8000/tasks/create-task/  -------
http://127.0.0.1:8000/tasks/view-tasks/

video 7.1: Django Debug Toolbar: https://django-debug-toolbar.readthedocs.io/en/latest/installation.html
python -m pip install django-debug-toolbar

video 7.3: pip install Faker (generates fake data)
https://faker.readthedocs.io/en/master/

get and filter data:
Task.objects.all()
Task.objects.get(id=1)  # 1 object only, error for multiple
Task.objects.filter(status="PENDING")  # can be multiple
https://docs.djangoproject.com/en/5.2/ref/models/querysets/


pip install Pillow

python manage.py startapp core --(video 10.6)


user: anup(Manager),user2(Employee),user3, pw:aB@12345
users: admin(Admin), teaton(User), linda49(Employee), jamesruiz(Employee), pw: 1234 -------------------------

----
for email,
google app password:
anup30coc@gmail.com
app name: task_mgmt
pass: vbic fese svmc xhwv

temp email:
  https://temp-mail.org/en/
  https://temp-mail.io/en
-------

pip install python-decouple

Ctrl + Shift + R: 
This forces a hard reload of the current page by clearing the cache and re-downloading all resources. --------------

(module 12 (100mins) 29.6.25-7:45pm to 30.6.25-7:50pm)

at 13.8,

===================================
github: create repo

git init
git status
git add .
git status
git commit -m "initial commit"
git status

git branch -M main
git remote add origin https://github.com/anup-sdp/dj_phitron_task_mgmt.git
git push -u origin main
------------
git add .
git commit -m "before moving to class based view"
git push -u origin main
------------
git add .
git commit -m "bug fix"
git push -u origin main
====================================

module 5: cbv
Classy Class-Based Views: https://ccbv.co.uk/
http://docs.djangoproject.com/en/5.2/topics/class-based-views/
@method_decorator,
auth mixins: LoginRequiredMixin, PermissionRequiredMixin, UserPassesTestMixin
context mixin,

15.5 Generic display views: ListView, DetailView




at 15.6, 0:00




n




